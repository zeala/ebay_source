package ebayApp.services.commands.finding
{
	import ebayApp.services.EbayServiceAbstract;
	import ebayApp.services.FindingServiceGET;
	import ebayApp.services.IEbayService;
	import ebayApp.services.commands.EbayCommand;
	import ebayApp.services.dto.PaginationInput;
	import ebayApp.services.dto.ShoppingServiceRequestObject;
	
	public class FindItemsAdvancedCommand extends EbayCommand
	{
		public static const OPERATION_NAME : String = FindingServiceOperationName.FIND_ITEMS_ADVANCED;
		public static const RESPONSE_EVENT_NAME : String = "findItemsAdvancedResponse";
		
		public function FindItemsAdvancedCommand(service:IEbayService)
		{
			super(service);
			this.service.addEventListener( RESPONSE_EVENT_NAME, serviceResultHandler );
		}
		
		override public function getOperationName():String
		{
			return OPERATION_NAME;
		}
		
		override protected function getFullUrl(requestObj : ShoppingServiceRequestObject = null ):String
		{
			
			var keywords : String = requestObj.queryKeywords;
			
			var paginationInput:PaginationInput = new PaginationInput();
			paginationInput.entriesPerPage = 20;
			paginationInput.pageNumber = 1;
			
			var url:String = FindingServiceGET.SEARCH_URL + "/?";
			url += "OPERATION-NAME=" + FindingServiceOperationName.FIND_ITEMS_ADVANCED;
			if ( requestObj.siteId )
			{
				url += "&GLOBAL-ID=" + requestObj.siteId;
			}
			url += "&SERVICE-VERSION=1.0.0";
			url += "&SECURITY-APPNAME=" + EbayServiceAbstract.apiAppName;
			if ( keywords )
			{	
				url += "&keywords=" + keywords; 
			}
			if ( requestObj.categoryId != "-1")
			{
				url += "&categoryId=" + requestObj.categoryId;
			}
			url += "&outputSelector[0]=GalleryInfo";
			url += "&outputSelector[1]=PictureURLLarge";
			url += "&outputSelector[2]=pictureURLSuperSize";
			if ( paginationInput )
			{
				url += "&paginationInput.entriesPerPage=" + paginationInput.entriesPerPage;
				url += "&paginationInput.pageNumber=" + paginationInput.pageNumber;
			}
			
			
			trace("\n findItemsAdvancedURL " + url );
			return url;
		}
	}
}