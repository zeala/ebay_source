package com.ebayproject.components.imageScroll{		import com.ebayproject.components.imageScroll.tween.TweenLite;		import flash.display.Loader;	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLRequest;
			public class NavItem extends Sprite	{				private var _ref	:Number;		private var _source:String;		private var _width:Number		private var loader	:Loader;		private var fade	:Number = .3;				public static const EVENT_CLICKED	:String		= "NavItem_Event_Clicked"		/**		 * Constructor for a NavItem 		 * @param ref		 * @param source		 * @param width		 * 		 */				public function NavItem(ref:Number, source:String, width:Number)		{			super();			_ref = ref;			_source = source;			_width = width			this.x = ref*(width/2);			init( )				}				/**		 * Initialize the NavItem		 * @private		 */				private function init( ):void		{			//the background holds fills in the shape to the proper size 			//while the image is loaded			var background:Shape = new Shape();			background.graphics.beginFill(0x000000);			background.graphics.drawRect(0, 0, _width, _width);			background.graphics.endFill();			addChild(background);		    //load the image 		    loader = new Loader();		    var request:URLRequest = new URLRequest("thumbnails/"+_source);		    loader.load(request);		    loader.alpha = 1;			addChild(loader);						enable();			}				/**		 * Disable the selected NavItem so that it cannot		 * be selected, since it is already, you know, selected.		 * 		 */				public function disable():void {			tweenAlpha( 0.6, 1 )			deactivateMouse( )		}				/**		 * Enable an unselected NavItem for selection 		 * 		 */				public function enable():void {			tweenAlpha( 0.6, fade )			activateMouse( )		}		/**		 * Unhighlight an unselected NavItem 		 * @param e		 * @private		 */			private function out(e:Event = null):void {			tweenAlpha( 0.6, fade )		}				/**		 * Highlight an unselected NavItem 		 * @param e		 * @private		 */				private function over(e:Event = null):void {			tweenAlpha( 0.6, 1 )		}					/**		 * Tween the NavItem's alphaduring transitions 		 * @param duration		 * @param alpha		 * @private		 */				private function tweenAlpha( duration:Number, alpha:Number ):void		{			TweenLite.to(this, duration, {alpha:alpha});		}				/**		 * Add the event listeners for the NavItem 		 * @private		 */				private function activateMouse( ):void		{			buttonMode	= true;			addEventListener(MouseEvent.CLICK, clicked);			addEventListener(MouseEvent.MOUSE_OVER, over );			addEventListener(MouseEvent.MOUSE_OUT, out );					}				/**		 * Remove the NavItem's event listeners 		 * @private		 */		private function deactivateMouse( ):void		{			buttonMode	= false;			removeEventListener(MouseEvent.CLICK, clicked);			removeEventListener(MouseEvent.MOUSE_OVER, over );			removeEventListener(MouseEvent.MOUSE_OUT, out );					}				/**		 * Dispatch an event when the NavItem is clicked		 * @param e		 * @private		 */							private function clicked(e:Event = null):void {			dispatchEvent(new Event(EVENT_CLICKED));		}				/**		 *  The reference number of the NavItem		 * @return 		 * 		 */				public function get ref():Number { return _ref; }			}}