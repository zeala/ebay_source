<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   minWidth="955" minHeight="600" xmlns:model="model.*" 
			   xmlns:view="view.*" 
			   xmlns:panels="com.ebayproject.components.panels.*" 
			   xmlns:book="com.pricope.miti.book.*"
			   xmlns:scrollbars="style.skins.scrollbars.*"
			   backgroundColor="0xcccccc"
			   width="100%"
			   height="100%" xmlns:skins="style.skins.*" 
			   
			   >
	<fx:Declarations>
		<model:FindingServicePM id="findingServicePM" />
	</fx:Declarations>
	<fx:Style source="style/defaults.css"/>
	<fx:Script>
		<![CDATA[
			import com.ebayproject.events.CategoryEvent;
			
			import mx.events.PropertyChangeEvent;
			
			import ebayApp.services.CommandManager;
			import ebayApp.services.commands.finding.FindItemsAdvancedCommand;
			import ebayApp.services.commands.shopping.GetCategoryInfoCommand;
			import ebayApp.services.dto.ShoppingServiceRequestObject;
			import ebayApp.services.util.codeTypes.IncludeSelectors;
			import ebayApp.services.util.codeTypes.SiteCodeType;
			
			import model.ProductManager;
			
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			
		
			private var _siteId : String = SiteCodeType.EBAY_US;
			[Bindable("siteIdChange")]
			public function get siteId () : String
			{
				return _siteId;
			}
			public function set siteId(val:String):void
			{
				if (_siteId == val ) return;
				_siteId = val;
				dispatchEvent( new Event("siteIdChange"));
			}

			private function requestSearchHandler(event:PropertyChangeEvent):void
			{
				var requestObj : ShoppingServiceRequestObject = new ShoppingServiceRequestObject();
				//requestObj.siteId = "0";
				requestObj.queryKeywords = event.newValue.toString();
				
				if (siteId )
				{
					requestObj.siteId = siteId;
				}
				CommandManager.getInstance()[FindItemsAdvancedCommand.OPERATION_NAME].execute(requestObj);
					
			}
			
			private function requestCategoriesHandler(event:CategoryEvent):void
			{
				var requestObj : ShoppingServiceRequestObject = new ShoppingServiceRequestObject();
				//requestObj.siteId = "0";
				requestObj.includeSelector = IncludeSelectors.CHILD_CATEGORIES;
				requestObj.categoryId = event.categoryId;
				
				if (siteId )
				{
					requestObj.siteId = siteId;
				}
				CommandManager.getInstance()[GetCategoryInfoCommand.OPERATION_NAME].execute(requestObj);
			}
			
			private function requestResultsForCategoryHandler( event : CategoryEvent ) : void
			{
				var requestObj : ShoppingServiceRequestObject = new ShoppingServiceRequestObject();
				requestObj.categoryId = event.categoryId;
				if (siteId )
				{
					requestObj.siteId = siteId;
				}
				CommandManager.getInstance()[FindItemsAdvancedCommand.OPERATION_NAME].execute(requestObj);
			}
			
			private function changeDomainHandler(event : PropertyChangeEvent ) : void
			{	
				if ( siteId != String(event.newValue))
				{
					siteId = event.newValue as String;
					
					if ( ProductManager.getInstance().categories )
					{
						ProductManager.getInstance().categories.removeAll();	
						ProductManager.getInstance().categories = null;
					}
				}
			}
			

		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="20"/>
	</s:layout>
	
	
	<s:Group  >
		<s:layout>
			<s:HorizontalLayout />
		</s:layout>
		

		<panels:SearchControls
			id="searchControls"
			productManager="{ProductManager.getInstance()}"
			requestSearch="requestSearchHandler(event)"
			requestChildCategories="requestCategoriesHandler(event)"
			requestResultsForCategory="requestResultsForCategoryHandler(event)"
			changeDomain="changeDomainHandler(event)"
			/>
	</s:Group>  
	
	<panels:BookContainer productManager="{ProductManager.getInstance()}" />
	
	
</s:Application>
